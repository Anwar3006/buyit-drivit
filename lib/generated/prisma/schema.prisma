// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  email     String   @unique
  name      String?
  imageUrl  String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole @default(USER)

  // Relationships
  savedCars  UserSavedCar[]
  testDrives TestDriveBooking[]
}

enum UserRole {
  USER
  ADMIN
}

model Car {
  id           String    @id @default(uuid())
  make         String
  model        String
  year         Int
  price        Decimal   @db.Decimal(10, 2)
  mileage      Int
  color        String
  fuelType     String
  bodyType     String
  transmission String
  description  String
  seats        Int?
  status       CarStatus @default(AVAILABLE)
  featured     Boolean   @default(false)
  images       String[] //Array of supabase storage urls
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relationships
  savedBy            UserSavedCar[]
  testDrivesBookings TestDriveBooking[]

  // indexing to make the search faster, provides faster access
  @@index([make, model])
  @@index([bodyType])
  @@index([fuelType])
  @@index([price])
  @@index([year])
  @@index([status])
  @@index([featured])
}

enum CarStatus {
  AVAILABLE
  UNAVAILABLE
  SOLD
}

model UserSavedCar {
  id      String   @id @default(uuid())
  userId  String
  carId   String
  savedAt DateTime @default(now())

  // Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  car  Car  @relation(fields: [carId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([userId, carId])
  // Indexing
  @@index([userId])
  @@index([carId])
}

model TestDriveBooking {
  id          String        @id @default(uuid())
  userId      String
  carId       String
  bookingDate DateTime      @db.Date
  startTime   String //format: HH:MM
  endTime     String //format: HH:MM
  status      BookingStatus @default(PENDING)
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relationships
  user User @relation(fields: [userId], references: [id])
  car  Car  @relation(fields: [carId], references: [id])

  // Indexing
  @@index([userId])
  @@index([carId])
  @@index([bookingDate])
  @@index([status])
}

enum BookingStatus {
  CONFIRMED
  COMPLETED
  CANCELLED
  PENDING
  NO_SHOW
}

// We set these with default values because we are using only one dealership, but in the future the table exists so more dealera can be added
model DealershipInfo {
  id        String   @id @default(uuid())
  email     String   @default("contact@bitdit.com")
  name      String   @default("BuyIt_DrivIt")
  phone     String   @default("+233 54 333 9109")
  address   String   @default("104 Lomo Adawu Street, La Wireless, Accra")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship
  workingHours WorkingHours[]
}

model WorkingHours {
  id            String    @id @default(uuid())
  dealsershipId String
  dayOfWeek     DayOfWeek
  openTime      String //format: HH:MM
  closeTime     String //format: HH:MM
  isOpen        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relationship
  dealership DealershipInfo @relation(fields: [dealsershipId], references: [id], onDelete: Cascade)

  // Constraints- A Dealership cant have 2 Mondays in a week, so we set this.
  @@unique([dealsershipId, dayOfWeek])
  // Indexes
  @@index([dealsershipId])
  @@index([dayOfWeek])
  @@index([isOpen])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
